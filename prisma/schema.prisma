generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id          String   @id @default(cuid())
  name        String
  slug        String?  @unique
  description String
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  categories Category[]
  reviews    Review[]
  products   Product[]
}

model Category {
  id          String   @id @default(cuid())
  name        String
  slug        String?  @unique
  description String?
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  restaurants Restaurant[]
}

model Product {
  id           String   @id @default(cuid())
  name         String
  description  String
  slug         String?  @unique
  price        Float
  imageUrl     String?
  restaurantId String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  reviews    Review[]
}

model Customer {
  id          String   @id @default(cuid())
  userId      String   @unique
  firstName   String
  lastName    String?
  email       String   @unique
  phoneNumber String?
  address     String?
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  reviews Review[]
}

model Review {
  id         String   @id @default(cuid())
  rating     Int
  comment    String?
  customerId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  customer Customer @relation(fields: [customerId], references: [userId], onDelete: Cascade)

  productId    String?
  restaurantId String?

  product    Product?    @relation(fields: [productId], references: [id], onDelete: Cascade)
  restaurant Restaurant? @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  @@index([productId])
  @@index([restaurantId])
}
